[DATA]
source_data_file = gaia_grid.h5
target_data_file = gaia_observed2.h5
wave_grid_file = gaia_wavegrid.npy
multimodal_keys = ['teff', 'feh', 'logg', 'alpha']
unimodal_keys = []
continuum_normalize = False
divide_by_median = False
apply_dropout = False
add_noise_to_source = True
max_noise_factor = 0.1
random_chunk = True
overlap = 0.9
channel_indices = [0]
std_min = 0.00001

[TRAINING]
batchsize = 64
chunk_size = 250
lr = 0.001
final_lr_factor = 100.0
weight_decay = 0.01
total_batch_iters = 200000
source_mm_weights = [10.0, 10.0, 10.0, 10.0]
source_um_weights = []
target_feature_weight = 1.
source_feature_weight = 1.
source_task_weights = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
target_task_weights = [0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
feat_loss_fn = l1

[ARCHITECTURE]
spectrum_size = 800
encoder_dim = 16
conv_widths_sh = [64, 128, 256, 512]
conv_depths_sh = [3, 4, 6, 4]
stem_features_sh = 32
stem_filt_size = 4
stem_stride = 1
conv_filts_sp = [64]
conv_strides_sp = [1]
filter_lengths_sp = [1]
pool_length = 1
unimodal_means = []
unimodal_stds = []
spectra_mean = 0.913
spectra_std = 0.160
tasks = ['wavelength', 'slope', 'bias', 'sine amp', 'sine period', 'sine phi']
task_means = [8580, 0, 0.0, 0, 0.5, 0]
task_stds = [70, 5e-05, 0.1, 0.2, 2, 2]

[Notes]
comment = From 290, new validation dataset and actually applying sine augmentations
